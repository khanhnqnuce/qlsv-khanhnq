@model FDI.Base.Customer

@{
    ViewBag.Title = ViewBag.ActionText + " chuyên mục khách hàng";
    Layout = "~/Areas/Admin/Views/Shared/_Ajax.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {

        $("#CustomerForm").validate({
            rules: {
                FirstName:
                    {
                        required: true,
                        maxlength: 255
                    },
                LastName:
                {
                    required: true,
                    maxlength: 255
                },
                CustomerTypeID:
         {
             required: {
                 depends: function(element) {
                     return $("#@Html.IdFor(model => model.CustomerTypeID)").val() == "";
                }
            }
        },
                UserName:
        {
            required: true,
            minlength: 4,
            maxlength: 255,
            remote: "@Url.Action("CheckByUserName", "Customer", new { customer = Model.ID })"
        },
                Email:
         {
             required: true,
             email: true,
             maxlength: 255,
             remote: "@Url.Action("CheckByEmail", "Customer", new { customer = Model.ID })"
        },
                Gender:
         {
             required: true
         },
                Birthday:
        {
            required: true,
            date:true
        }
            },
            messages: {
                FirstName: "Bạn cần nhập họ",
                LastName: "Bạn cần nhập tên",
                CustomerTypeID: "Bạn cần chọn loại khách hàng",
                UserName: {
                    required:"Bạn cần nhập tên đăng nhập",
                    remote:"Tên đăng nhập đã được sử dụng"
                },
                Email: {
                    required: "Bạn cần nhập email",
                    email: "Bạn cần nhập đúng email",
                    remote:"Email đã được sử dụng"
                },
                Gender: "Bạn cần chọn giới tính",
                Birthday: "Bạn cần nhập ngày sinh",
                Mobile: "Bạn cần nhập số điện thoại",
                LastIpAddress: "Bạn cần nhập địa chỉ IP truy cập cuối",
                MacAddress: "Bạn cần nhập địa chỉ MAC",
                BillingAddress: "Bạn cần nhập địa chỉ thanh toán",
                ShippingAddress: "Bạn cần nhập địa chỉ chuyển hàng",
                PaymentMethodID: "Bạn cần chọn phương thức thanh toán",
                CountryID: "Bạn cần chọn đất nước",
                CityID: "Bạn cần chọn thành phố",
                DistrictID: "Bạn cần chọn quận/huyện"
            },
            submitHandler: function () { //onSubmit
                $.post(urlPostAction, $("#CustomerForm").serialize(), function (data) {
                    if (data.Erros)
                        createMessage("Đã có lỗi xảy ra", data.Message); // Tạo thông báo lỗi
                    else {
                        $("#dialog-form").dialog('close'); //Đóng form thêm mới - sửa
                        createCloseMessage("Thông báo", data.Message, '#Page=1&itemId=' + data.ID + '&message=' + data.Message + '&temp=' + Math.floor(Math.random() * 11) + ''); // Tạo thông báo khi click đóng thì chuyển đến url đích
                    }
                });
                return false;
            }
        });
        
        $("#@Html.IdFor(model => model.Birthday), #@Html.IdFor(model => model.CreatedOnUtc), #@Html.IdFor(model => model.LastActivityDateUtc), #@Html.IdFor(model => model.LastLoginDateUtc)").datepicker({
            showOn: "button",
            buttonImageOnly: true
        }).mask('00/00/0000');

        $("#@Html.IdFor(model => model.LastIpAddress)").mask('099.099.099.099');

        $("#close").click(function () {
            $("#dialog-form").html("").dialog('close');
        });

        $("#@Html.IdFor(model => model.CityID)").change(function() {
            var cityId = $(this).val();
            $.post( "@(Url.Action("getDistrictByCity", "SystemDistrict"))", {"cityId": cityId}, function( data ) {
                $("#@Html.IdFor(model => model.DistrictID)").html("");
                $.each( data.list, function( i, val ) {
                    $("#@Html.IdFor(model => model.DistrictID)").append("<option value='"+val.ID+"'>"+val.Name+"</option>");
            });
            });
        });
        
        var urlSelectDefaultImage = "/Admin/GalleryPictureSelect/?MutilFile=false&Container=DefaultImages";
        $("#Button_DefaultImages").live('click',function () {
            selectPicture(urlSelectDefaultImage + "&ValuesSelected=" + $("#Value_DefaultImages").val());
        });
    });
</script>

<div id="Order">
    <form id="CustomerForm">
        <input type="hidden" name="do" id="do" value="@ViewBag.Action"/>
        <input type="hidden" name="ItemID" id="ItemID" value="@Model.ID"/>
        <fieldset class="forms">
            <table class="tableforms" cellspacing="1" width="100%">
                <tr>
                    <td style="width: 150px;">
                        <label>@Resources.CSResourceString.Customer_FirstName</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.FirstName)
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_LastName</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.LastName)
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_TypeName</label>
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.CustomerTypeID, new SelectList(ViewBag.ListCustomerType, "ID", "Name"), "Chọn loại khách hàng")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_UserName</label>
                    </td>
                    <td>
                        @(ViewBag.Action.ToString() == "Edit" ? Html.DisplayFor(model => model.UserName) : Html.EditorFor(model => model.UserName))
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Email</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Email)
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Avatar</label></td>
                    <td>
                        <div id="Text_DefaultImages">
                            @if (Model.CustomerAvatarID.HasValue)
                            {
                                <table class="gridView" cellspacing="1">
                                    <tr title="@Model.Gallery_Picture.Name" id="@Model.Gallery_Picture.ID">
                                        <td>@Model.Gallery_Picture.ID</td>
                                        <td>
                                            @Gallery.DisplayImage(Model.Gallery_Picture.Folder + Model.Gallery_Picture.Url, 120)
                                        </td>
                                        <td>
                                            <p>Tên ảnh: <b>@Model.Gallery_Picture.Name</b></p>
                                            <p>Ngày tạo: <i>@Model.Gallery_Picture.DateCreated.ToString("dd/MM/yyyy hh:mm:ss tt")</i></p>
                                            <p>Album: <b>@((Model.Gallery_Picture.AlbumID.HasValue) ? Model.Gallery_Picture.Name : "")</b></p>
                                            <p>Chuyên mục: <b>@( Model.Gallery_Picture.CategoryID.HasValue && Model.Gallery_Picture.Gallery_Category != null ? Model.Gallery_Picture.Gallery_Category.Name : "")</b></p>
                                        </td>
                                        <td>
                                            <button type="button" onclick="$(this).parent().parent().remove(); getValuePicture('DefaultImages'); return false;">Xóa</button>
                                        </td>
                                    </tr>
                                </table>
                            }
                        </div>
                        <button type="button" id="Button_DefaultImages">Chọn hỉnh ảnh đại diện</button>
                        <input type="hidden" name="CustomerAvatarID" id="Value_DefaultImages" value="@((Model.CustomerAvatarID.HasValue) ? Model.CustomerAvatarID.Value.ToString() : "")" />
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Gender</label>
                    </td>
                    <td>
                        @Html.RadioButtonFor(model => model.Gender, true)
                        Nam
                        @Html.RadioButtonFor(model => model.Gender, false)
                        Nữ
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>Nhân viên quản trị</label>
                    </td>
                    <td>
                        @Html.CheckBox("IsAdmin")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_BirthDay</label>
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Birthday, new { @Value = Model.Birthday.HasValue ? Model.Birthday.Value.ToString("dd/MM/yyyy") : string.Empty, @type = "datetime" })
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Mobile</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Mobile)
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_IpLastAddress</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.LastIpAddress)
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_MACAddress</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.MacAddress)
                    </td>
                </tr>

                @if (ViewBag.Action.ToString() == "Edit")
                {
                    <tr>
                        <td>
                            <label>@Resources.CSResourceString.Customer_CreateDate</label>
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.CreatedOnUtc, new { @Value = Model.CreatedOnUtc.HasValue ? Model.CreatedOnUtc.Value.ToString("dd/MM/yyyy") : string.Empty, @type = "datetime" })
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <label>@Resources.CSResourceString.Customer_LastLoginDate</label>
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.LastLoginDateUtc, new { @Value = Model.LastLoginDateUtc.HasValue ? Model.LastLoginDateUtc.Value.ToString("dd/MM/yyyy") : string.Empty, @type = "datetime" })
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <label>@Resources.CSResourceString.Customer_LastActivityDate</label>
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.LastActivityDateUtc, new { @Value = Model.LastActivityDateUtc.HasValue ? Model.LastActivityDateUtc.Value.ToString("dd/MM/yyyy") : string.Empty, @type = "datetime" })
                        </td>
                    </tr>
                }

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_BillingAddress</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.BillingAddress)
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_ShippingAddress</label>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.ShippingAddress)
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Device</label>
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.DeviceID, new SelectList(ViewBag.ListCustomerDevice, "ID", "Name"), "Chọn thiết bị khách truy cập")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Country</label>
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.CountryID, new SelectList(ViewBag.ListCountry, "ID", "Name"), "Chọn đất nước")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_City</label>
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.CityID, new SelectList(ViewBag.ListCity, "ID", "Name"), "Chọn thành phố")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_District</label>
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.DistrictID, new SelectList(ViewBag.ListDistrict, "ID", "Name"), "Chọn quận/huyện")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_Active</label>
                    </td>
                    <td>
                        @Html.CheckBox("IsActive")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_IsReceiveEmail</label>
                    </td>
                    <td>
                        @Html.CheckBox("IsReceiveEmail")
                    </td>
                </tr>

                <tr>
                    <td>
                        <label>@Resources.CSResourceString.Customer_IsReceiveSMS</label>
                    </td>
                    <td>
                        @Html.CheckBox("IsReceiveSms")
                    </td>
                </tr>

                <tr>
                    <td></td>
                    <td>
                        <button id="submit" type="submit" class="primaryAction">@ViewBag.ActionText</button>
                        <button id="reset" type="reset" class="primaryAction">Nhập lại</button>
                        <button id="close" type="button" class="primaryAction">Đóng lại</button>
                        @*@if (ViewBag.Action.ToString() == "Edit")
                        {
                            <button id="resetpass" type="button" class="primaryAction">Reset to Random Password Customer</button>
                        }*@
                    </td>
                </tr>
            </table>
        </fieldset>
    </form>
</div>
<script type="text/javascript">
    $("#resetpass").click(function() {
        
        var customerid = @Model.ID;
        var link = "/Admin/Customer/ResetPassword";
        $.post(link, {"id":customerid
        }, function(data) {
            createMessage("Thông báo", data.Message);
        });
    });
</script>
